FORMAT: 1A
HOST: https://api.apiblueprint.org/

# Plutonium
Plutonium parsing service provides parsing of API description formats (namely API Blueprint, but also others) "as a service".

## Media Types
The API uses [content negotiation](https://en.wikipedia.org/wiki/Content_negotiation) heavily. Send requests with the `Content-Type` header set to the right input media type and use the `Accept` header to select desired output as a response.

![Media Types](https://github.com/apiaryio/plutonium/blob/master/assets/mediatypes.svg?raw=true)

### Resource State Representation

```
application/hal+json
```

Where applicable this API uses the [HAL+JSON](https://github.com/mikekelly/hal_specification/blob/master/hal_specification.md) media type to represent resource states and to provide available affordances.

### Error States
The common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used. Error responses use the [vnd.error](https://github.com/blongden/vnd.error) media type.

## Data Structures

### Transformation Instruction (object)
+ input_type (string, required)
+ input_document (string, required)
+ output_type (string, required)
+ options (object, optional)
    + source_map: false (boolean, default) - whether or not to include source maps

### Transformation Result (object)
+ output_type (string, required)
+ output_document (string)
+ meta (object, optional)
    + transformation_time (string) - amount of time taken by parsing
    + input_size (number) - the length of the input document in octets
    + output_size (number) - the length of the result document in octets

## Service Root [/]
API entry point.

This resource does not have any attributes, instead it provides list of available affordances.

### Affordances
- `parse` - Parse an API description

    See _API Description Parser_ resource's _Parser_ action for details.

- `compose` - Composes an API description

    See _API Description Composer_ resource's _Compose_ action for details.

- `transform` - Transforms API description to AST or vice versa

    See _API Description formats transformation_ resource's _Transform_ action for details.

### List [GET]

+ Relation: index

+ Response 200 (application/hal+json)
    + Headers

            Link: <http://docs.plutonium.apiary.io>; rel="profile"

    + Body

            {
                "_links": {
                    "self": {"href": "/"},
                    "parse": {"href": "/parser"},
                    "compose": {"href": "/composer"}
                }
            }

## API Description formats transformation [/transform]
This endpoint should be successor of _API Description Parser_ and _API Description Composer_.

### Transform [POST]

+ Request (application/json)
    + Attributes (Transformation Instruction)

+ Response 200 (application/hal+json)
    + Attributes (Transformation Result)

+ Response 422 (application/vnd.error+json)

        {
          "statusCode": "422",
          "message": {
            "code": 2,
            "message": "the use of tab(s) '\\t' in source data isn't currently supported, please contact makers",
            "location": [
              {
                "index": 11,
                "length": 1
              }
            ]
          }
        }

+ Response 415 (application/vnd.error+json)

+ Response 406 (application/vnd.error+json)

## API Description Parser [/parser]
Parse an API description format.

### Parse [POST]
API Blueprint parsing is performed as it is provided by the [Drafter](https://github.com/apiaryio/drafter) reference parser.

Legacy Apiary Blueprint parsing is performed as it is provided by the [PEG.js-based reference parser](https://github.com/apiaryio/blueprint-parser).

#### Input Media Types

##### API Blueprint

```
text/vnd.apiblueprint
```

API Blueprint as defined in its [specification](https://github.com/apiaryio/api-blueprint/blob/master/API%20Blueprint%20Specification.md).

##### Legacy Apiary Blueprint

```
text/vnd.legacyblueprint
```

Legacy Apiary Blueprint format used in [Apiary](http://apiary.io/) before introduction of the API Blueprint.

Please be aware that this media type is supported only to keep backward compatibility for those with already existing legacy blueprints.

#### Output Media Types

##### API Description Parse Result Namespace

```
application/vnd.refract+json
application/vnd.refract+yaml
```

General-purpose result of the parsing operation. The parse result is in form of the Refract data structure as defined in its [specification](https://github.com/refractproject/refract-spec). The parse result data comply with the [Parse Result Namespace](https://github.com/refractproject/refract-spec/blob/master/namespaces/parse-result.md).

##### API Blueprint Parse Result

```
application/vnd.apiblueprint.parseresult+json
application/vnd.apiblueprint.parseresult+yaml
```

API Blueprint Parse Result is just serialized API Blueprint AST (`application/vnd.apiblueprint.ast+json` or `application/vnd.apiblueprint.ast+yaml`) alongside with parser annotations (source map, warnings and errors) defined in [Parse Result Media Types](https://github.com/apiaryio/api-blueprint-ast/blob/master/Parse%20Result.md).

Please keep in mind that the API Blueprint parse result media types are soon to be deprecated in favor of the API Description Parse Result Namespace.

##### Legacy Apiary Blueprint AST

```
application/vnd.legacyblueprint.ast+json
```

Serialized legacy Apiary Blueprint AST represented in its JSON format. The legacy Apiary Blueprint format and its AST were used in [Apiary](http://apiary.io/) before introduction of the API Blueprint.

Please be aware that this media type is supported only to keep backward compatibility for those with already existing legacy blueprints.

+ Relation: parse

+ Request Parse API Blueprint into Parse Result Namespace returned as JSON (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.refract+json

    + Body

            # GET /message
            + Response 200 (text/plain)

                    Hello World!

+ Response 200 (application/vnd.refract+json)

        {
            "element": "parseResult",
            "content": [
                {
                    "element": "category",
                    "meta": {
                        "classes": [
                            "api"
                        ],
                        "title": ""
                    },
                    "content": [
                        {
                            "element": "category",
                            "meta": {
                                "classes": [
                                    "resourceGroup"
                                ],
                                "title": ""
                            },
                            "content": [
                                {
                                    "element": "resource",
                                    "meta": {
                                        "title": ""
                                    },
                                    "attributes": {
                                        "href": "/message"
                                    },
                                    "content": [
                                        {
                                            "element": "transition",
                                            "meta": {
                                                "title": ""
                                            },
                                            "content": [
                                                {
                                                    "element": "httpTransaction",
                                                    "content": [
                                                        {
                                                            "element": "httpRequest",
                                                            "attributes": {
                                                                "method": "GET"
                                                            },
                                                            "content": []
                                                        },
                                                        {
                                                            "element": "httpResponse",
                                                            "attributes": {
                                                                "statusCode": "200",
                                                                "headers": {
                                                                    "element": "httpHeaders",
                                                                    "content": [
                                                                        {
                                                                            "element": "member",
                                                                            "content": {
                                                                                "key": {
                                                                                    "element": "string",
                                                                                    "content": "Content-Type"
                                                                                },
                                                                                "value": {
                                                                                    "element": "string",
                                                                                    "content": "text/plain"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "content": [
                                                                {
                                                                    "element": "asset",
                                                                    "meta": {
                                                                        "classes": "messageBody"
                                                                    },
                                                                    "attributes": {
                                                                        "contentType": "text/plain"
                                                                    },
                                                                    "content": "Hello World!\n"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }

+ Request Parse API Blueprint into Parse Result Namespace returned as YAML (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.refract+yaml

    + Body

            # GET /message
            + Response 200 (text/plain)

                    Hello World!

+ Response 200 (application/vnd.refract+yaml)

        element: parseResult
        content:
            -
                element: category
                meta:
                    classes:
                        - api
                    title: ''
                content:
                    -
                        element: category
                        meta:
                            classes:
                                - resourceGroup
                            title: ''
                        content:
                            -
                                element: resource
                                meta:
                                    title: ''
                                attributes:
                                    href: /message
                                content:
                                    -
                                        element: transition
                                        meta:
                                            title: ''
                                        content:
                                            -
                                                element: httpTransaction
                                                content:
                                                    -
                                                        element: httpRequest
                                                        attributes:
                                                            method: GET
                                                        content: []
                                                    -
                                                        element: httpResponse
                                                        attributes:
                                                            statusCode: '200'
                                                            headers:
                                                                element: httpHeaders
                                                                content:
                                                                    -
                                                                        element: member
                                                                        content:
                                                                            key:
                                                                                element: string
                                                                                content: Content-Type
                                                                            value:
                                                                                element: string
                                                                                content: text/plain
                                                        content:
                                                            -
                                                                element: asset
                                                                meta:
                                                                    classes: messageBody
                                                                attributes:
                                                                    contentType: text/plain
                                                                content: |
                                                                    Hello World!

+ Request Parse legacy Apiary Blueprint into Parse Result Namespace (text/vnd.legacyblueprint)

    + Headers

            Accept: application/vnd.refract+json

    + Body

            --- Sample API ---
            GET /message
            < 200
            < Content-Type: text/plain
            Hello World!

+ Response 200 (application/vnd.refract+json)

        {
            "element": "parseResult",
            "content": [
                {
                    "element": "category",
                    "meta": {
                        "classes": [
                            "api"
                        ],
                        "title": "Sample API"
                    },
                    "content": [
                        {
                            "element": "category",
                            "meta": {
                                "classes": [
                                    "resourceGroup"
                                ],
                                "title": ""
                            },
                            "content": [
                                {
                                    "element": "resource",
                                    "meta": {
                                        "title": ""
                                    },
                                    "attributes": {
                                        "href": "/message"
                                    },
                                    "content": [
                                        {
                                            "element": "transition",
                                            "meta": {
                                                "title": ""
                                            },
                                            "content": [
                                                {
                                                    "element": "httpTransaction",
                                                    "content": [
                                                        {
                                                            "element": "httpRequest",
                                                            "attributes": {
                                                                "method": "GET"
                                                            },
                                                            "content": []
                                                        },
                                                        {
                                                            "element": "httpResponse",
                                                            "attributes": {
                                                                "statusCode": "200",
                                                                "headers": {
                                                                    "element": "httpHeaders",
                                                                    "content": [
                                                                        {
                                                                            "element": "member",
                                                                            "content": {
                                                                                "key": {
                                                                                    "element": "string",
                                                                                    "content": "Content-Type"
                                                                                },
                                                                                "value": {
                                                                                    "element": "string",
                                                                                    "content": "text/plain"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "content": [
                                                                {
                                                                    "element": "asset",
                                                                    "meta": {
                                                                        "classes": "messageBody"
                                                                    },
                                                                    "attributes": {
                                                                        "contentType": "text/plain"
                                                                    },
                                                                    "content": "Hello World!\n"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }

+ Request Parse API Blueprint into AST returned as JSON parse result (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.apiblueprint.parseresult+json

    + Body

            # GET /message
            + Response 200 (text/plain)

                    Hello World!

+ Request API Blueprint parsing with Content-Type suffixed by '+markdown' (text/vnd.apiblueprint+markdown)

    + Headers

            Accept: application/vnd.apiblueprint.parseresult+json

    + Body

            # GET /message
            + Response 200 (text/plain)

                    Hello World!

+ Response 200 (application/vnd.apiblueprint.parseresult+json)

        {
            "_version": "2.2",
            "ast": {
                "_version": "4.0",
                "metadata": [],
                "name": "",
                "description": "",
                "element": "category",
                "resourceGroups": [
                    {
                        "name": "",
                        "description": "",
                        "resources": [
                            {
                                "element": "resource",
                                "name": "",
                                "description": "",
                                "uriTemplate": "/message",
                                "model": {},
                                "parameters": [],
                                "actions": [
                                    {
                                        "name": "",
                                        "description": "",
                                        "method": "GET",
                                        "parameters": [],
                                        "attributes": {
                                            "relation": "",
                                            "uriTemplate": ""
                                        },
                                        "content": [],
                                        "examples": [
                                            {
                                                "name": "",
                                                "description": "",
                                                "requests": [],
                                                "responses": [
                                                    {
                                                        "name": "200",
                                                        "description": "",
                                                        "headers": [
                                                            {
                                                                "name": "Content-Type",
                                                                "value": "text/plain"
                                                            }
                                                        ],
                                                        "body": "Hello World!\n",
                                                        "schema": "",
                                                        "content": [
                                                            {
                                                                "element": "asset",
                                                                "attributes": {
                                                                    "role": "bodyExample"
                                                                },
                                                                "content": "Hello World!\n"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "content": []
                            }
                        ]
                    }
                ],
                "content": [
                    {
                        "element": "category",
                        "content": [
                            {
                                "element": "resource",
                                "name": "",
                                "description": "",
                                "uriTemplate": "/message",
                                "model": {},
                                "parameters": [],
                                "actions": [
                                    {
                                        "name": "",
                                        "description": "",
                                        "method": "GET",
                                        "parameters": [],
                                        "attributes": {
                                            "relation": "",
                                            "uriTemplate": ""
                                        },
                                        "content": [],
                                        "examples": [
                                            {
                                                "name": "",
                                                "description": "",
                                                "requests": [],
                                                "responses": [
                                                    {
                                                        "name": "200",
                                                        "description": "",
                                                        "headers": [
                                                            {
                                                                "name": "Content-Type",
                                                                "value": "text/plain"
                                                            }
                                                        ],
                                                        "body": "Hello World!\n",
                                                        "schema": "",
                                                        "content": [
                                                            {
                                                                "element": "asset",
                                                                "attributes": {
                                                                    "role": "bodyExample"
                                                                },
                                                                "content": "Hello World!\n"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "content": []
                            }
                        ]
                    }
                ]
            },
            "sourcemap": {
                "metadata": [],
                "name": [],
                "description": [],
                "resourceGroups": [
                    {
                        "name": [],
                        "description": [],
                        "resources": [
                            {
                                "name": [],
                                "description": [],
                                "uriTemplate": [
                                    [
                                        0,
                                        15
                                    ]
                                ],
                                "model": {},
                                "parameters": [],
                                "actions": [
                                    {
                                        "name": [],
                                        "description": [],
                                        "method": [
                                            [
                                                0,
                                                15
                                            ]
                                        ],
                                        "parameters": [],
                                        "examples": [
                                            {
                                                "name": [],
                                                "description": [],
                                                "requests": [],
                                                "responses": [
                                                    {
                                                        "name": [
                                                            [
                                                                17,
                                                                27
                                                            ]
                                                        ],
                                                        "description": [],
                                                        "headers": [
                                                            [
                                                                [
                                                                    17,
                                                                    27
                                                                ]
                                                            ]
                                                        ],
                                                        "body": [
                                                            [
                                                                48,
                                                                16
                                                            ]
                                                        ],
                                                        "schema": [],
                                                        "content": [
                                                            {
                                                                "content": [
                                                                    [
                                                                        48,
                                                                        16
                                                                    ]
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "attributes": {
                                            "relation": [],
                                            "uriTemplate": []
                                        },
                                        "content": []
                                    }
                                ],
                                "content": []
                            }
                        ]
                    }
                ],
                "content": [
                    {
                        "content": [
                            {
                                "name": [],
                                "description": [],
                                "uriTemplate": [
                                    [
                                        0,
                                        15
                                    ]
                                ],
                                "model": {},
                                "parameters": [],
                                "actions": [
                                    {
                                        "name": [],
                                        "description": [],
                                        "method": [
                                            [
                                                0,
                                                15
                                            ]
                                        ],
                                        "parameters": [],
                                        "examples": [
                                            {
                                                "name": [],
                                                "description": [],
                                                "requests": [],
                                                "responses": [
                                                    {
                                                        "name": [
                                                            [
                                                                17,
                                                                27
                                                            ]
                                                        ],
                                                        "description": [],
                                                        "headers": [
                                                            [
                                                                [
                                                                    17,
                                                                    27
                                                                ]
                                                            ]
                                                        ],
                                                        "body": [
                                                            [
                                                                48,
                                                                16
                                                            ]
                                                        ],
                                                        "schema": [],
                                                        "content": [
                                                            {
                                                                "content": [
                                                                    [
                                                                        48,
                                                                        16
                                                                    ]
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "attributes": {
                                            "relation": [],
                                            "uriTemplate": []
                                        },
                                        "content": []
                                    }
                                ],
                                "content": []
                            }
                        ]
                    }
                ]
            },
            "error": null,
            "warnings": []
        }

+ Request Parse API Blueprint into AST returned as YAML parse result (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.apiblueprint.parseresult+yaml

    + Body

            # GET /message
            + Response 200 (text/plain)

                    Hello World!

+ Response 200 (application/vnd.apiblueprint.parseresult+yaml)

        _version: '2.2'
        ast:
            _version: '3.0'
            metadata: []
            name: ''
            description: ''
            element: category
            resourceGroups:
                -
                    name: ''
                    description: ''
                    resources:
                        -
                            element: resource
                            name: ''
                            description: ''
                            uriTemplate: /message
                            model: {}
                            parameters: []
                            actions:
                                -
                                    name: ''
                                    description: ''
                                    method: GET
                                    parameters: []
                                    attributes:
                                        relation: ''
                                        uriTemplate: ''
                                    content: []
                                    examples:
                                        -
                                            name: ''
                                            description: ''
                                            requests: []
                                            responses:
                                                -
                                                    name: '200'
                                                    description: ''
                                                    headers:
                                                        -
                                                            name: Content-Type
                                                            value: text/plain
                                                    body: |
                                                        Hello World!
                                                    schema: ''
                                                    content:
                                                        -
                                                            element: asset
                                                            attributes:
                                                                role: bodyExample
                                                            content: |
                                                                Hello World!
                            content: []
            content:
                -
                    element: category
                    content:
                        -
                            element: resource
                            name: ''
                            description: ''
                            uriTemplate: /message
                            model: {}
                            parameters: []
                            actions:
                                -
                                    name: ''
                                    description: ''
                                    method: GET
                                    parameters: []
                                    attributes:
                                        relation: ''
                                        uriTemplate: ''
                                    content: []
                                    examples:
                                        -
                                            name: ''
                                            description: ''
                                            requests: []
                                            responses:
                                                -
                                                    name: '200'
                                                    description: ''
                                                    headers:
                                                        -
                                                            name: Content-Type
                                                            value: text/plain
                                                    body: |
                                                        Hello World!
                                                    schema: ''
                                                    content:
                                                        -
                                                            element: asset
                                                            attributes:
                                                                role: bodyExample
                                                            content: |
                                                                Hello World!
                            content: []
        sourcemap:
            metadata: []
            name: []
            description: []
            resourceGroups:
                -
                    name: []
                    description: []
                    resources:
                        -
                            name: []
                            description: []
                            uriTemplate:
                                -
                                    - 0
                                    - 15
                            model: {}
                            parameters: []
                            actions:
                                -
                                    name: []
                                    description: []
                                    method:
                                        -
                                            - 0
                                            - 15
                                    parameters: []
                                    examples:
                                        -
                                            name: []
                                            description: []
                                            requests: []
                                            responses:
                                                -
                                                    name:
                                                        -
                                                            - 17
                                                            - 27
                                                    description: []
                                                    headers:
                                                        -
                                                            -
                                                                - 17
                                                                - 27
                                                    body:
                                                        -
                                                            - 48
                                                            - 16
                                                    schema: []
                                                    content:
                                                        -
                                                            content:
                                                                -
                                                                    - 48
                                                                    - 16
                                    attributes:
                                        relation: []
                                        uriTemplate: []
                                    content: []
                            content: []
            content:
                -
                    content:
                        -
                            name: []
                            description: []
                            uriTemplate:
                                -
                                    - 0
                                    - 15
                            model: {}
                            parameters: []
                            actions:
                                -
                                    name: []
                                    description: []
                                    method:
                                        -
                                            - 0
                                            - 15
                                    parameters: []
                                    examples:
                                        -
                                            name: []
                                            description: []
                                            requests: []
                                            responses:
                                                -
                                                    name:
                                                        -
                                                            - 17
                                                            - 27
                                                    description: []
                                                    headers:
                                                        -
                                                            -
                                                                - 17
                                                                - 27
                                                    body:
                                                        -
                                                            - 48
                                                            - 16
                                                    schema: []
                                                    content:
                                                        -
                                                            content:
                                                                -
                                                                    - 48
                                                                    - 16
                                    attributes:
                                        relation: []
                                        uriTemplate: []
                                    content: []
                            content: []
        error: null
        warnings: []

+ Request Ask for non-existing parse result serialization (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.apiblueprint.parseresult+xml

    + Body

            # GET /message
            + Response 200 (text/plain)

                    Hello World!

+ Response 406 (application/vnd.error+json)

        {
            "message": "Requested type application/vnd.apiblueprint.parseresult+xml is not a supported output format of the parsing service. Supported output formats for text/vnd.apiblueprint media type: application/vnd.apiblueprint.parseresult+json, application/vnd.apiblueprint.parseresult+yaml."
        }

+ Request Parse API Blueprint sent with wrong Content-Type (text/plain)

    + Headers

            Accept: application/vnd.apiblueprint.parseresult+json

    + Body

            # GET /message
            + Response 200 (text/plain)

                    Hello World!

+ Request Parse legacy Apiary Blueprint into AST returned as JSON (text/vnd.legacyblueprint)

    + Headers

            Accept: application/vnd.legacyblueprint.ast+json

    + Body

            --- Sample API ---
            GET /message
            < 200
            < Content-Type: text/plain
            Hello World!

+ Response 200 (application/vnd.legacyblueprint.ast+json)

        {
            "location": null,
            "name": "Sample API",
            "description": null,
            "sections": [
                {
                    "name": null,
                    "description": null,
                    "resources": [
                        {
                            "description": null,
                            "method": "GET",
                            "url": "/message",
                            "request": {
                                "headers": {},
                                "body": null
                            },
                            "responses": [
                                {
                                    "status": 200,
                                    "headers": {
                                        "Content-Type": "text/plain"
                                    },
                                    "body": "Hello World!"
                                }
                            ]
                        }
                    ]
                }
            ],
            "validations": []
        }

+ Request Parse erroneous legacy Apiary Blueprint (text/vnd.legacyblueprint)

    + Headers

            Accept: application/vnd.apiblueprint.ast+json

    + Body

            < 200
            Hello World!

+ Response 422 (application/vnd.error+json)

        {
            "message": "SyntaxError: Expected \"---\", \"HOST:\" or empty line but \"R\" found."
        }

+ Request Parse Swagger JSON into Parse Result Namespace (application/swagger+json)

    + Headers

            Accept: application/vnd.refract.parse-result+json

    + Body

            {
              "swagger": "2.0",
              "info": {
                "title": "Minimal Swagger Example"
              }
            }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "meta": {},
          "attributes": {},
          "content": [
            {
              "element": "category",
              "meta": {
                "classes": [
                  "api"
                ],
                "title": "Minimal Swagger Example"
              },
              "attributes": {},
              "content": []
            }
          ]
        }

+ Request Parse Swagger YAML into Parse Result Namespace (application/swagger+yaml)

    + Headers

            Accept: application/vnd.refract.parse-result+json

    + Body

            swagger: '2.0'
            info:
              title: Minimal Swagger Example


+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "meta": {},
          "attributes": {},
          "content": [
            {
              "element": "category",
              "meta": {
                "classes": [
                  "api"
                ],
                "title": "Minimal Swagger Example"
              },
              "attributes": {},
              "content": []
            }
          ]
        }

## API Description Composer [/composer]
Reverse the parsing process--compose an API description format.

### Compose [POST]
The composition of API Blueprint is performed as it is provided by the [Matter Compiler](https://github.com/apiaryio/matter_compiler) tool.

#### Input Media Types

##### API Blueprint AST

```
application/vnd.apiblueprint.ast+json
application/vnd.apiblueprint.ast+yaml
```

Serialized API Blueprint AST represented either in its JSON or YAML format as defined in [API Blueprint AST Serialization Media Types](https://github.com/apiaryio/api-blueprint-ast).

Please keep in mind that the API Blueprint AST is soon to be deprecated in favor of the API Description Parse Result Namespace.

#### Output Media Types

##### API Blueprint

```
text/vnd.apiblueprint
```

API Blueprint as defined in its [specification](https://github.com/apiaryio/api-blueprint/blob/master/API%20Blueprint%20Specification.md).

+ Relation: compose

+ Request Compose API Blueprint from AST sent as YAML (application/vnd.apiblueprint.ast+yaml)

        _version: "4.0"
        metadata: []
        name: ""
        description: ""
        element: category
        resourceGroups:
            - name: ""
                description: ""
                resources:
                    - element: resource
                        name: ""
                        description: ""
                        uriTemplate: /message
                        model: {}
                        parameters: []
                        actions:
                            - name: ""
                                description: ""
                                method: GET
                                parameters: []
                                attributes:
                                    relation: ""
                                    uriTemplate: ""
                                content: []
                                examples:
                                    - name: ""
                                        description: ""
                                        requests: []
                                        responses:
                                            - name: "200"
                                                description: ""
                                                headers:
                                                    - name: Content-Type
                                                        value: text/plain
                                                body: "Hello World!\n"
                                                schema: ""
                                                content:
                                                    - element: asset
                                                        attributes:
                                                            role: bodyExample
                                                        content: "Hello World!\n"
                        content: []
        content:
            - element: category
                content:
                    - element: resource
                        name: ""
                        description: ""
                        uriTemplate: /message
                        model: {}
                        parameters: []
                        actions:
                            - name: ""
                                description: ""
                                method: GET
                                parameters: []
                                attributes:
                                    relation: ""
                                    uriTemplate: ""
                                content: []
                                examples:
                                    - name: ""
                                        description: ""
                                        requests: []
                                        responses:
                                            - name: "200"
                                                description: ""
                                                headers:
                                                    - name: Content-Type
                                                        value: text/plain
                                                body: "Hello World!\n"
                                                schema: ""
                                                content:
                                                    - element: asset
                                                        attributes:
                                                            role: bodyExample
                                                        content: "Hello World!\n"
                        content: []

+ Request Compose API Blueprint from AST sent as JSON (application/vnd.apiblueprint.ast+json)

        {
            "_version": "4.0",
            "metadata": [],
            "name": "",
            "description": "",
            "element": "category",
            "resourceGroups": [
                {
                    "name": "",
                    "description": "",
                    "resources": [
                        {
                            "element": "resource",
                            "name": "",
                            "description": "",
                            "uriTemplate": "/message",
                            "model": {},
                            "parameters": [],
                            "actions": [
                                {
                                    "name": "",
                                    "description": "",
                                    "method": "GET",
                                    "parameters": [],
                                    "attributes": {
                                        "relation": "",
                                        "uriTemplate": ""
                                    },
                                    "content": [],
                                    "examples": [
                                        {
                                            "name": "",
                                            "description": "",
                                            "requests": [],
                                            "responses": [
                                                {
                                                    "name": "200",
                                                    "description": "",
                                                    "headers": [
                                                        {
                                                            "name": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "Hello World!\n",
                                                    "schema": "",
                                                    "content": [
                                                        {
                                                            "element": "asset",
                                                            "attributes": {
                                                                "role": "bodyExample"
                                                            },
                                                            "content": "Hello World!\n"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "content": []
                        }
                    ]
                }
            ],
            "content": [
                {
                    "element": "category",
                    "content": [
                        {
                            "element": "resource",
                            "name": "",
                            "description": "",
                            "uriTemplate": "/message",
                            "model": {},
                            "parameters": [],
                            "actions": [
                                {
                                    "name": "",
                                    "description": "",
                                    "method": "GET",
                                    "parameters": [],
                                    "attributes": {
                                        "relation": "",
                                        "uriTemplate": ""
                                    },
                                    "content": [],
                                    "examples": [
                                        {
                                            "name": "",
                                            "description": "",
                                            "requests": [],
                                            "responses": [
                                                {
                                                    "name": "200",
                                                    "description": "",
                                                    "headers": [
                                                        {
                                                            "name": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "Hello World!\n",
                                                    "schema": "",
                                                    "content": [
                                                        {
                                                            "element": "asset",
                                                            "attributes": {
                                                                "role": "bodyExample"
                                                            },
                                                            "content": "Hello World!\n"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "content": []
                        }
                    ]
                }
            ]
        }

+ Response 200 (text/vnd.apiblueprint)

        # /message
        ## GET
        + Response 200 (text/plain)

                Hello World!
